#!/bin/bash
#
# Shell script for building sparcv8leon-gr712rc project
#
# Copyright 2023 Phoenix Systems
# Author: Lukasz Leczkowski
#
[ "${BASH_SOURCE[0]}" -ef "$0" ] && echo "You should source this script, not execute it!" && exit 1

. "_targets/build.common"

CROSS=sparc-phoenix-

export PSH_DEFUSRPWDHASH="0B1ANiYi45IhxkfmUW155/GBd4IRE="

#
# Ports configuration
#
export PORTS_BUSYBOX=n
export PORTS_PCRE=n
export PORTS_OPENSSL=n
export PORTS_LIGHTTPD=n
export PORTS_DROPBEAR=n
export PORTS_LUA=n
export PORTS_LZO=n
export PORTS_OPENVPN=n
export PORTS_JANSSON=n
export PORTS_CURL=n

#
# Platform dependent parameters
#
export SIZE_PAGE=$((0x1000))

export BOOT_DEVICE="flash0"              # Default boot device
export MAGIC_USER_SCRIPT="dabaabad" # User script magic value
#TODO: move to nvm.yaml
ERASE_SIZE=$((0x20000))           # Rootfs disk erase block size (in bytes)


b_build_project() {
	b_log "Building user applications"
	make -C "_user" all install
}


b_build_target() {
	b_log "Building $TARGET project"
	b_log "Building phoenix-rtos-loader"

	image_builder.py script --nvm "$NVM_CONFIG" --script "$PLO_SCRIPT_PREINIT" --out script.plo
	make -C plo all

	cp -a "${PREFIX_PROG_STRIPPED}plo-${TARGET_FAMILY}-${TARGET_SUBFAMILY}.img" "$PREFIX_BOOT/plo.img"
	cp -a "${PREFIX_PROG_STRIPPED}plo-ram-${TARGET_FAMILY}-${TARGET_SUBFAMILY}.img" "$PREFIX_BOOT/plo-ram.img"
}


b_image_target() {
	image_builder.py -v partition --nvm "$NVM_CONFIG" --name kernel --script "$PLO_SCRIPT_USER"

	b_log "Creating rootfs"

	ROOTFS="$PREFIX_BOOT/rootfs.jffs2"

	# Create jffs2 image with padding at the end of the final erase block, no cleanmarkers (are written by PLO)
	mkfs.jffs2 -U -b -m none -e "$ERASE_SIZE" -s "$SIZE_PAGE" -r "$PREFIX_ROOTFS/" -o "$ROOTFS" -p -n

	if sumtool -n -e "$ERASE_SIZE" -b -i "$ROOTFS" -o "$ROOTFS.tmp" 2> /dev/null; then
		echo "JFFS2 Summary nodes created"
		mv "$ROOTFS.tmp" "$ROOTFS"
	fi

	local FS_OFFS=$(image_builder.py query --nvm "$NVM_CONFIG" '{{ nvm.flash0.rootfs.offs }}')
	local FS_SZ=$(image_builder.py query --nvm "$NVM_CONFIG" '{{ nvm.flash0.rootfs.size }}')
	sz=$(du -k "$ROOTFS" | awk '{ print $1 }')
	echo "rootfs size: ${sz} kB / $((FS_SZ / 1024)) kB"
	[ "$sz" -gt "$FS_SZ" ] && b_die "rootfs size exceeds the target partition!"

	# cmd for creating cleanmarkers in plo
	echo "Format jffs2 partition in plo:"
	echo "jffs2 -d 2.0 -c $((FS_OFFS / ERASE_SIZE)):$((FS_SZ / ERASE_SIZE)):${ERASE_SIZE}:16"

	image_builder.py ptable --nvm "$NVM_CONFIG"
	image_builder.py -v disk --nvm "$NVM_CONFIG" --part "rootfs=$ROOTFS" --part "plo=${PREFIX_PROG_STRIPPED}plo-${TARGET_FAMILY}-${TARGET_SUBFAMILY}.img"
}


b_test_target() {
	b_log "Build and install tests in the phoenix-rtos filesystem"
	make -C "phoenix-rtos-tests" all install
}

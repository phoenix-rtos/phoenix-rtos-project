# vim:sw=2:ts=2
name: ci

# on events
on:
  push:
    branches:
      - master
      - 'feature/*'
  pull_request:
    branches:
      - master
      - 'feature/*'

# jobs
jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    outputs:
      build_result: ${{ steps.build.outcome }}
    strategy:
      matrix:
        target: ['armv7a9-zynq7000-qemu']
        include:
          - target: 'armv7a9-zynq7000-qemu'
            additional_params: 'ports'
    steps:
      # step 1: checkout repository code inside the workspace directory of the runner
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      # attach GCC problem matcher - will pin problems to files only in current submodule
      - uses: ammaraskar/gcc-problem-matcher@master

      # step 2: use our custom action to build the project
      - name: Build
        id: build
        uses: ./.github/actions/phoenix-build
        with:
          target: ${{ matrix.target }}
          syspage: ${{ matrix.syspage }}
          params: core fs test project image ${{ matrix.additional_params }}

      # step 3: tar rootfs
      - name: Tar rootfs
        working-directory: _fs
        run: tar -cvf ../rootfs-${{ matrix.target }}.tar ${{ matrix.target }}/root

      # step 4: upload project boot directory and tarball of rootfs as build artifacts
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: phoenix-rtos-${{ matrix.target }}
          path: |
            _boot/${{ matrix.target }}
            rootfs-${{ matrix.target }}.tar
  test-emu:
    needs: build
    name: run tests on emulators
    runs-on: ubuntu-latest
    outputs:
      runner_result: ${{ steps.runner.outcome }}
    strategy:
      matrix:
        target: ['armv7a9-zynq7000-qemu']

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: phoenix-rtos-${{ matrix.target }}

      - name: Untar rootfs
        working-directory: _fs
        run: tar -xvf ../rootfs-${{ matrix.target }}.tar

      - uses: actions/checkout@v2
      - name: Setup upterm session
        uses: lhotari/action-upterm@v1

      - name: Test runner
        id: runner
        uses: ./.github/actions/phoenix-runner
        with:
          target: ${{ matrix.target }}

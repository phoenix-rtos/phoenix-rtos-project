diff -Naur micropython-1.15/ports/unix/mpconfigport.h micropython-phoenix/ports/unix/mpconfigport.h
--- micropython-1.15/ports/unix/mpconfigport.h	2021-04-18 16:27:07.000000000 +0200
+++ micropython-phoenix/ports/unix/mpconfigport.h	2021-06-30 11:48:28.980936563 +0200
@@ -34,7 +34,7 @@
 // If we're building the minimal variant, ignore the rest of this file.
 #ifndef MICROPY_UNIX_MINIMAL
 
-#define MICROPY_ALLOC_PATH_MAX      (PATH_MAX)
+#define MICROPY_ALLOC_PATH_MAX      (260)
 #define MICROPY_PERSISTENT_CODE_LOAD (1)
 #if !defined(MICROPY_EMIT_X64) && defined(__x86_64__)
     #define MICROPY_EMIT_X64        (1)
@@ -137,9 +137,9 @@
 #define MICROPY_STACKLESS_STRICT    (0)
 #endif
 
-#define MICROPY_PY_OS_STATVFS       (1)
-#define MICROPY_PY_UTIME            (1)
-#define MICROPY_PY_UTIME_MP_HAL     (1)
+#define MICROPY_PY_OS_STATVFS       (0)
+#define MICROPY_PY_UTIME            (0)
+#define MICROPY_PY_UTIME_MP_HAL     (0)
 #define MICROPY_PY_UERRNO           (1)
 #define MICROPY_PY_UCTYPES          (1)
 #define MICROPY_PY_UZLIB            (1)
@@ -202,7 +202,6 @@
 extern const struct _mp_obj_module_t mp_module_time;
 extern const struct _mp_obj_module_t mp_module_termios;
 extern const struct _mp_obj_module_t mp_module_socket;
-extern const struct _mp_obj_module_t mp_module_ffi;
 extern const struct _mp_obj_module_t mp_module_jni;
 
 #if MICROPY_PY_UOS_VFS
@@ -242,7 +236,6 @@
 #endif
 
 #define MICROPY_PORT_BUILTIN_MODULES \
-    MICROPY_PY_FFI_DEF \
     MICROPY_PY_JNI_DEF \
     MICROPY_PY_UTIME_DEF \
     MICROPY_PY_SOCKET_DEF \
@@ -276,20 +269,20 @@
 typedef long mp_off_t;
 #endif
 
-void mp_unix_alloc_exec(size_t min_size, void **ptr, size_t *size);
+// void mp_unix_alloc_exec(size_t min_size, void **ptr, size_t *size);
 void mp_unix_free_exec(void *ptr, size_t size);
 void mp_unix_mark_exec(void);
-#define MP_PLAT_ALLOC_EXEC(min_size, ptr, size) mp_unix_alloc_exec(min_size, ptr, size)
+// #define MP_PLAT_ALLOC_EXEC(min_size, ptr, size) mp_unix_alloc_exec(min_size, ptr, size)
 #define MP_PLAT_FREE_EXEC(ptr, size) mp_unix_free_exec(ptr, size)
 #ifndef MICROPY_FORCE_PLAT_ALLOC_EXEC
 // Use MP_PLAT_ALLOC_EXEC for any executable memory allocation, including for FFI
 // (overriding libffi own implementation)
-#define MICROPY_FORCE_PLAT_ALLOC_EXEC (1)
+#define MICROPY_FORCE_PLAT_ALLOC_EXEC (0)
 #endif
 
 #ifdef __linux__
 // Can access physical memory using /dev/mem
-#define MICROPY_PLAT_DEV_MEM  (1)
+#define MICROPY_PLAT_DEV_MEM  (0)
 #endif
 
 // Assume that select() call, interrupted with a signal, and erroring
@@ -345,12 +338,12 @@
 // Other libc's don't define it, but proactively assume that dirent->d_type
 // is available on a modern *nix system.
 #ifndef _DIRENT_HAVE_D_TYPE
-#define _DIRENT_HAVE_D_TYPE (1)
+#define _DIRENT_HAVE_D_TYPE (0)
 #endif
 // This macro is not provided by glibc but we need it so ports that don't have
 // dirent->d_ino can disable the use of this field.
 #ifndef _DIRENT_HAVE_D_INO
-#define _DIRENT_HAVE_D_INO (1)
+#define _DIRENT_HAVE_D_INO (0)
 #endif
 
 #ifndef __APPLE__
@@ -371,6 +364,5 @@
     } while (0);
 
 #include <sched.h>
-#define MICROPY_UNIX_MACHINE_IDLE sched_yield();
 
 #endif // MICROPY_UNIX_MINIMAL
diff -Naur micropython-1.15/ports/unix/variants/manifest.py micropython-phoenix/ports/unix/variants/manifest.py
--- micropython-1.15/ports/unix/variants/manifest.py	2021-04-18 16:27:07.000000000 +0200
+++ micropython-phoenix/ports/unix/variants/manifest.py	2021-06-30 11:48:28.984933298 +0200
@@ -1,2 +0,0 @@
-freeze_as_mpy('$(MPY_DIR)/tools', 'upip.py')
-freeze_as_mpy('$(MPY_DIR)/tools', 'upip_utarfile.py', opt=3)
